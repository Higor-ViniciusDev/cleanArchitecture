// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/Higor-ViniciusDev/CleanArchiteture/internal/entity"
	events2 "github.com/Higor-ViniciusDev/CleanArchiteture/internal/events"
	"github.com/Higor-ViniciusDev/CleanArchiteture/internal/infra/database"
	"github.com/Higor-ViniciusDev/CleanArchiteture/internal/infra/web"
	"github.com/Higor-ViniciusDev/CleanArchiteture/internal/usecase"
	"github.com/Higor-ViniciusDev/CleanArchiteture/pkg/events"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func NewCreateOrdemUseCaseInje(db *sql.DB, disparador events.EventoDisparadorInterface) *usecase.OrdemUseCase {
	ordemRepository := database.NewOrdemRepository(db)
	ordemCreated := events2.NewOrdemCreated()
	ordemUseCase := usecase.NewCreateOrdemUseCase(ordemRepository, ordemCreated, disparador)
	return ordemUseCase
}

func NewListAllOrdemUseCaseInje(db *sql.DB) *usecase.ListOrdemUseCase {
	ordemRepository := database.NewOrdemRepository(db)
	listOrdemUseCase := usecase.NewListOrdemUseCase(ordemRepository)
	return listOrdemUseCase
}

func NewWebOrdersHandleInje(createUseCase *usecase.OrdemUseCase, listAllUseCase *usecase.ListOrdemUseCase) *web.OrdensHandler {
	ordensHandler := web.NewOrdensHandler(createUseCase, listAllUseCase)
	return ordensHandler
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrdemRepository, wire.Bind(new(entity.RepositoryOrdemInterface), new(*database.OrdemRepository)))

var setOrderCreatedEvent = wire.NewSet(events2.NewOrdemCreated, wire.Bind(new(events.EventoInterface), new(*events2.OrdemCreated)))

var setDisparadorEvento = wire.NewSet(events.NewEventoDisparador, events2.NewOrdemCreated, wire.Bind(new(events.EventoDisparadorInterface), new(*events.EventoDisparador)), wire.Bind(new(events.EventoInterface), new(*events2.OrdemCreated)))
